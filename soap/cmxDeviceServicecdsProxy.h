/* cmxDeviceServicecdsProxy.h
   Generated by gSOAP 2.7.6e from ds_intf.h
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef cmxDeviceServicecds_H
#define cmxDeviceServicecds_H
#include "cmxDeviceServiceH.h"
extern SOAP_NMAC struct Namespace cmxDeviceService_namespaces[];

namespace cmxDeviceService {
class cds
{   public:
	struct soap *soap;
	const char *endpoint;
	cds() { soap = soap_new(); if (soap) soap->namespaces = cmxDeviceService_namespaces; endpoint = "http://220.120.109.37:29700"; };
	virtual ~cds() { if (soap) { soap_destroy(soap); soap_end(soap); soap_done(soap); soap_del(soap); } };
	virtual int ns__getDeviceCategoryCount(void *_, int *out) { return soap ? soap_call_ns__getDeviceCategoryCount(soap, endpoint, NULL, _, out) : SOAP_EOM; };
	virtual int ns__getDeviceCategoryItem(int order, ns__getDeviceCategoryItemResponse *out) { return soap ? soap_call_ns__getDeviceCategoryItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getDeviceCategory(ns__deviceCategory in, ns__getDeviceCategoryResponse *out) { return soap ? soap_call_ns__getDeviceCategory(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__setDeviceCategory(ns__deviceCategory in, ns__setDeviceCategoryResponse *out) { return soap ? soap_call_ns__setDeviceCategory(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__deviceCategoryEvent(ns__deviceCategory in, int *out) { return soap ? soap_call_ns__deviceCategoryEvent(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__getBoilerCount(void *_, int *out) { return soap ? soap_call_ns__getBoilerCount(soap, endpoint, NULL, _, out) : SOAP_EOM; };
	virtual int ns__getBoilerPropertyItem(int order, ns__getBoilerPropertyItemResponse *out) { return soap ? soap_call_ns__getBoilerPropertyItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getBoilerItem(int order, ns__getBoilerItemResponse *out) { return soap ? soap_call_ns__getBoilerItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getBoiler(ns__boiler in, ns__getBoilerResponse *out) { return soap ? soap_call_ns__getBoiler(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__setBoiler(ns__boiler in, ns__setBoilerResponse *out) { return soap ? soap_call_ns__setBoiler(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__boilerEvent(ns__boiler in, int *out) { return soap ? soap_call_ns__boilerEvent(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__getLightCount(void *_, int *out) { return soap ? soap_call_ns__getLightCount(soap, endpoint, NULL, _, out) : SOAP_EOM; };
	virtual int ns__getLightPropertyItem(int order, ns__getLightPropertyItemResponse *out) { return soap ? soap_call_ns__getLightPropertyItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getLightItem(int order, ns__getLightItemResponse *out) { return soap ? soap_call_ns__getLightItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getLight(ns__light in, ns__getLightResponse *out) { return soap ? soap_call_ns__getLight(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__setLight(ns__light in, ns__setLightResponse *out) { return soap ? soap_call_ns__setLight(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__lightEvent(ns__light in, int *out) { return soap ? soap_call_ns__lightEvent(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__getGasValveCount(void *_, int *out) { return soap ? soap_call_ns__getGasValveCount(soap, endpoint, NULL, _, out) : SOAP_EOM; };
	virtual int ns__getGasValvePropertyItem(int order, ns__getGasValvePropertyItemResponse *out) { return soap ? soap_call_ns__getGasValvePropertyItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getGasValveItem(int order, ns__getGasValveItemResponse *out) { return soap ? soap_call_ns__getGasValveItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getGasValve(ns__gasValve in, ns__getGasValveResponse *out) { return soap ? soap_call_ns__getGasValve(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__setGasValve(ns__gasValve in, ns__setGasValveResponse *out) { return soap ? soap_call_ns__setGasValve(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__gasValveEvent(ns__gasValve in, int *out) { return soap ? soap_call_ns__gasValveEvent(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__getCurtainCount(void *_, int *out) { return soap ? soap_call_ns__getCurtainCount(soap, endpoint, NULL, _, out) : SOAP_EOM; };
	virtual int ns__getCurtainPropertyItem(int order, ns__getCurtainPropertyItemResponse *out) { return soap ? soap_call_ns__getCurtainPropertyItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getCurtainItem(int order, ns__getCurtainItemResponse *out) { return soap ? soap_call_ns__getCurtainItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getCurtain(ns__curtain in, ns__getCurtainResponse *out) { return soap ? soap_call_ns__getCurtain(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__setCurtain(ns__curtain in, ns__setCurtainResponse *out) { return soap ? soap_call_ns__setCurtain(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__curtainEvent(ns__curtain in, int *out) { return soap ? soap_call_ns__curtainEvent(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__getBundleLightCount(void *_, int *out) { return soap ? soap_call_ns__getBundleLightCount(soap, endpoint, NULL, _, out) : SOAP_EOM; };
	virtual int ns__getBundleLightPropertyItem(int order, ns__getBundleLightPropertyItemResponse *out) { return soap ? soap_call_ns__getBundleLightPropertyItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getBundleLightItem(int order, ns__getBundleLightItemResponse *out) { return soap ? soap_call_ns__getBundleLightItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getBundleLight(ns__bundleLight in, ns__getBundleLightResponse *out) { return soap ? soap_call_ns__getBundleLight(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__setBundleLight(ns__bundleLight in, ns__setBundleLightResponse *out) { return soap ? soap_call_ns__setBundleLight(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__BundleLightEvent(ns__bundleLight in, int *out) { return soap ? soap_call_ns__BundleLightEvent(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__getSystemAirconCount(void *_, int *out) { return soap ? soap_call_ns__getSystemAirconCount(soap, endpoint, NULL, _, out) : SOAP_EOM; };
	virtual int ns__getSystemAirconPropertyItem(int order, ns__getSystemAirconPropertyItemResponse *out) { return soap ? soap_call_ns__getSystemAirconPropertyItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getSystemAirconItem(int order, ns__getSystemAirconItemResponse *out) { return soap ? soap_call_ns__getSystemAirconItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getSystemAircon(ns__systemAircon in, ns__getSystemAirconResponse *out) { return soap ? soap_call_ns__getSystemAircon(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__setSystemAircon(ns__systemAircon in, ns__setSystemAirconResponse *out) { return soap ? soap_call_ns__setSystemAircon(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__systemAirconEvent(ns__systemAircon in, int *out) { return soap ? soap_call_ns__systemAirconEvent(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__getFanSystemCount(void *_, int *out) { return soap ? soap_call_ns__getFanSystemCount(soap, endpoint, NULL, _, out) : SOAP_EOM; };
	virtual int ns__getFanSystemPropertyItem(int order, ns__getFanSystemPropertyItemResponse *out) { return soap ? soap_call_ns__getFanSystemPropertyItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getFanSystemItem(int order, ns__getFanSystemItemResponse *out) { return soap ? soap_call_ns__getFanSystemItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getFanSystem(ns__fanSystem in, ns__getFanSystemResponse *out) { return soap ? soap_call_ns__getFanSystem(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__setFanSystem(ns__fanSystem in, ns__setFanSystemResponse *out) { return soap ? soap_call_ns__setFanSystem(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__FanSystemEvent(ns__fanSystem in, int *out) { return soap ? soap_call_ns__FanSystemEvent(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__getSecuritySensorCount(void *_, int *out) { return soap ? soap_call_ns__getSecuritySensorCount(soap, endpoint, NULL, _, out) : SOAP_EOM; };
	virtual int ns__getSecuritySensorPropertyItem(int order, ns__getSecuritySensorPropertyItemResponse *out) { return soap ? soap_call_ns__getSecuritySensorPropertyItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getSecuritySensorItem(int order, ns__getSecuritySensorItemResponse *out) { return soap ? soap_call_ns__getSecuritySensorItem(soap, endpoint, NULL, order, out) : SOAP_EOM; };
	virtual int ns__getSecuritySensor(ns__securitySensor in, ns__getSecuritySensorResponse *out) { return soap ? soap_call_ns__getSecuritySensor(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__setSecuritySensor(ns__securitySensor in, ns__setSecuritySensorResponse *out) { return soap ? soap_call_ns__setSecuritySensor(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__securitySensorEvent(ns__securitySensor in, int *out) { return soap ? soap_call_ns__securitySensorEvent(soap, endpoint, NULL, in, out) : SOAP_EOM; };
	virtual int ns__subcribeEvent(int port, int *out) { return soap ? soap_call_ns__subcribeEvent(soap, endpoint, NULL, port, out) : SOAP_EOM; };
};

} // namespace cmxDeviceService

#endif
