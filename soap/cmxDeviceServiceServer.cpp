/* cmxDeviceServiceServer.cpp
   Generated by gSOAP 2.7.6e from ds_intf.h
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "cmxDeviceServiceH.h"

namespace cmxDeviceService {

SOAP_SOURCE_STAMP("@(#) cmxDeviceServiceServer.cpp ver 2.7.6e 2010-08-20 13:24:12 GMT")


SOAP_FMAC5 int SOAP_FMAC6 cmxDeviceService_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif

	do
	{
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			soap->error = SOAP_EOF;
			return soap_send_fault(soap);
		}
#endif

		soap_begin(soap);

#ifndef WITH_FASTCGI
		if (!--k)
			soap->keep_alive = 0;
#endif

		if (soap_begin_recv(soap))
		{	if (soap->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(soap);
#else 
				return soap_send_fault(soap);
#endif
			}
			soap_closesock(soap);

			continue;
		}

		if (soap_envelope_begin_in(soap)
		 || soap_recv_header(soap)
		 || soap_body_begin_in(soap)
		 || cmxDeviceService_serve_request(soap)
		 || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
SOAP_FMAC5 int SOAP_FMAC6 cmxDeviceService_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getDeviceCategoryCount"))
		return soap_serve_ns__getDeviceCategoryCount(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getDeviceCategoryItem"))
		return soap_serve_ns__getDeviceCategoryItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getDeviceCategory"))
		return soap_serve_ns__getDeviceCategory(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setDeviceCategory"))
		return soap_serve_ns__setDeviceCategory(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:deviceCategoryEvent"))
		return soap_serve_ns__deviceCategoryEvent(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getBoilerCount"))
		return soap_serve_ns__getBoilerCount(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getBoilerPropertyItem"))
		return soap_serve_ns__getBoilerPropertyItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getBoilerItem"))
		return soap_serve_ns__getBoilerItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getBoiler"))
		return soap_serve_ns__getBoiler(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setBoiler"))
		return soap_serve_ns__setBoiler(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:boilerEvent"))
		return soap_serve_ns__boilerEvent(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getLightCount"))
		return soap_serve_ns__getLightCount(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getLightPropertyItem"))
		return soap_serve_ns__getLightPropertyItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getLightItem"))
		return soap_serve_ns__getLightItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getLight"))
		return soap_serve_ns__getLight(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setLight"))
		return soap_serve_ns__setLight(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:lightEvent"))
		return soap_serve_ns__lightEvent(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getGasValveCount"))
		return soap_serve_ns__getGasValveCount(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getGasValvePropertyItem"))
		return soap_serve_ns__getGasValvePropertyItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getGasValveItem"))
		return soap_serve_ns__getGasValveItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getGasValve"))
		return soap_serve_ns__getGasValve(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setGasValve"))
		return soap_serve_ns__setGasValve(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:gasValveEvent"))
		return soap_serve_ns__gasValveEvent(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getCurtainCount"))
		return soap_serve_ns__getCurtainCount(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getCurtainPropertyItem"))
		return soap_serve_ns__getCurtainPropertyItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getCurtainItem"))
		return soap_serve_ns__getCurtainItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getCurtain"))
		return soap_serve_ns__getCurtain(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setCurtain"))
		return soap_serve_ns__setCurtain(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:curtainEvent"))
		return soap_serve_ns__curtainEvent(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getBundleLightCount"))
		return soap_serve_ns__getBundleLightCount(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getBundleLightPropertyItem"))
		return soap_serve_ns__getBundleLightPropertyItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getBundleLightItem"))
		return soap_serve_ns__getBundleLightItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getBundleLight"))
		return soap_serve_ns__getBundleLight(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setBundleLight"))
		return soap_serve_ns__setBundleLight(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:BundleLightEvent"))
		return soap_serve_ns__BundleLightEvent(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getSystemAirconCount"))
		return soap_serve_ns__getSystemAirconCount(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getSystemAirconPropertyItem"))
		return soap_serve_ns__getSystemAirconPropertyItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getSystemAirconItem"))
		return soap_serve_ns__getSystemAirconItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getSystemAircon"))
		return soap_serve_ns__getSystemAircon(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setSystemAircon"))
		return soap_serve_ns__setSystemAircon(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:systemAirconEvent"))
		return soap_serve_ns__systemAirconEvent(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getFanSystemCount"))
		return soap_serve_ns__getFanSystemCount(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getFanSystemPropertyItem"))
		return soap_serve_ns__getFanSystemPropertyItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getFanSystemItem"))
		return soap_serve_ns__getFanSystemItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getFanSystem"))
		return soap_serve_ns__getFanSystem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setFanSystem"))
		return soap_serve_ns__setFanSystem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:FanSystemEvent"))
		return soap_serve_ns__FanSystemEvent(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getSecuritySensorCount"))
		return soap_serve_ns__getSecuritySensorCount(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getSecuritySensorPropertyItem"))
		return soap_serve_ns__getSecuritySensorPropertyItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getSecuritySensorItem"))
		return soap_serve_ns__getSecuritySensorItem(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getSecuritySensor"))
		return soap_serve_ns__getSecuritySensor(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setSecuritySensor"))
		return soap_serve_ns__setSecuritySensor(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:securitySensorEvent"))
		return soap_serve_ns__securitySensorEvent(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:subcribeEvent"))
		return soap_serve_ns__subcribeEvent(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getDeviceCategoryCount(struct soap *soap)
{	struct ns__getDeviceCategoryCount soap_tmp_ns__getDeviceCategoryCount;
	struct ns__getDeviceCategoryCountResponse soap_tmp_ns__getDeviceCategoryCountResponse;
	int soap_tmp_int;
	soap_default_ns__getDeviceCategoryCountResponse(soap, &soap_tmp_ns__getDeviceCategoryCountResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__getDeviceCategoryCountResponse.out = &soap_tmp_int;
	soap_default_ns__getDeviceCategoryCount(soap, &soap_tmp_ns__getDeviceCategoryCount);
	soap->encodingStyle = "";
	if (!soap_get_ns__getDeviceCategoryCount(soap, &soap_tmp_ns__getDeviceCategoryCount, "ns:getDeviceCategoryCount", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getDeviceCategoryCount(soap, soap_tmp_ns__getDeviceCategoryCount._, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getDeviceCategoryCountResponse(soap, &soap_tmp_ns__getDeviceCategoryCountResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getDeviceCategoryCountResponse(soap, &soap_tmp_ns__getDeviceCategoryCountResponse, "ns:getDeviceCategoryCountResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getDeviceCategoryCountResponse(soap, &soap_tmp_ns__getDeviceCategoryCountResponse, "ns:getDeviceCategoryCountResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getDeviceCategoryItem(struct soap *soap)
{	struct ns__getDeviceCategoryItem soap_tmp_ns__getDeviceCategoryItem;
	ns__getDeviceCategoryItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getDeviceCategoryItem(soap, &soap_tmp_ns__getDeviceCategoryItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getDeviceCategoryItem(soap, &soap_tmp_ns__getDeviceCategoryItem, "ns:getDeviceCategoryItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getDeviceCategoryItem(soap, soap_tmp_ns__getDeviceCategoryItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getDeviceCategoryItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getDeviceCategoryItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getDeviceCategory(struct soap *soap)
{	struct ns__getDeviceCategory soap_tmp_ns__getDeviceCategory;
	ns__getDeviceCategoryResponse out;
	out.soap_default(soap);
	soap_default_ns__getDeviceCategory(soap, &soap_tmp_ns__getDeviceCategory);
	soap->encodingStyle = "";
	if (!soap_get_ns__getDeviceCategory(soap, &soap_tmp_ns__getDeviceCategory, "ns:getDeviceCategory", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getDeviceCategory(soap, soap_tmp_ns__getDeviceCategory.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getDeviceCategoryResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getDeviceCategoryResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setDeviceCategory(struct soap *soap)
{	struct ns__setDeviceCategory soap_tmp_ns__setDeviceCategory;
	ns__setDeviceCategoryResponse out;
	out.soap_default(soap);
	soap_default_ns__setDeviceCategory(soap, &soap_tmp_ns__setDeviceCategory);
	soap->encodingStyle = "";
	if (!soap_get_ns__setDeviceCategory(soap, &soap_tmp_ns__setDeviceCategory, "ns:setDeviceCategory", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setDeviceCategory(soap, soap_tmp_ns__setDeviceCategory.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:setDeviceCategoryResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:setDeviceCategoryResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__deviceCategoryEvent(struct soap *soap)
{	struct ns__deviceCategoryEvent soap_tmp_ns__deviceCategoryEvent;
	struct ns__deviceCategoryEventResponse soap_tmp_ns__deviceCategoryEventResponse;
	int soap_tmp_int;
	soap_default_ns__deviceCategoryEventResponse(soap, &soap_tmp_ns__deviceCategoryEventResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__deviceCategoryEventResponse.out = &soap_tmp_int;
	soap_default_ns__deviceCategoryEvent(soap, &soap_tmp_ns__deviceCategoryEvent);
	soap->encodingStyle = "";
	if (!soap_get_ns__deviceCategoryEvent(soap, &soap_tmp_ns__deviceCategoryEvent, "ns:deviceCategoryEvent", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__deviceCategoryEvent(soap, soap_tmp_ns__deviceCategoryEvent.in, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__deviceCategoryEventResponse(soap, &soap_tmp_ns__deviceCategoryEventResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__deviceCategoryEventResponse(soap, &soap_tmp_ns__deviceCategoryEventResponse, "ns:deviceCategoryEventResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__deviceCategoryEventResponse(soap, &soap_tmp_ns__deviceCategoryEventResponse, "ns:deviceCategoryEventResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getBoilerCount(struct soap *soap)
{	struct ns__getBoilerCount soap_tmp_ns__getBoilerCount;
	struct ns__getBoilerCountResponse soap_tmp_ns__getBoilerCountResponse;
	int soap_tmp_int;
	soap_default_ns__getBoilerCountResponse(soap, &soap_tmp_ns__getBoilerCountResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__getBoilerCountResponse.out = &soap_tmp_int;
	soap_default_ns__getBoilerCount(soap, &soap_tmp_ns__getBoilerCount);
	soap->encodingStyle = "";
	if (!soap_get_ns__getBoilerCount(soap, &soap_tmp_ns__getBoilerCount, "ns:getBoilerCount", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getBoilerCount(soap, soap_tmp_ns__getBoilerCount._, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getBoilerCountResponse(soap, &soap_tmp_ns__getBoilerCountResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getBoilerCountResponse(soap, &soap_tmp_ns__getBoilerCountResponse, "ns:getBoilerCountResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getBoilerCountResponse(soap, &soap_tmp_ns__getBoilerCountResponse, "ns:getBoilerCountResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getBoilerPropertyItem(struct soap *soap)
{	struct ns__getBoilerPropertyItem soap_tmp_ns__getBoilerPropertyItem;
	ns__getBoilerPropertyItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getBoilerPropertyItem(soap, &soap_tmp_ns__getBoilerPropertyItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getBoilerPropertyItem(soap, &soap_tmp_ns__getBoilerPropertyItem, "ns:getBoilerPropertyItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getBoilerPropertyItem(soap, soap_tmp_ns__getBoilerPropertyItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getBoilerPropertyItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getBoilerPropertyItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getBoilerItem(struct soap *soap)
{	struct ns__getBoilerItem soap_tmp_ns__getBoilerItem;
	ns__getBoilerItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getBoilerItem(soap, &soap_tmp_ns__getBoilerItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getBoilerItem(soap, &soap_tmp_ns__getBoilerItem, "ns:getBoilerItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getBoilerItem(soap, soap_tmp_ns__getBoilerItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getBoilerItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getBoilerItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getBoiler(struct soap *soap)
{	struct ns__getBoiler soap_tmp_ns__getBoiler;
	ns__getBoilerResponse out;
	out.soap_default(soap);
	soap_default_ns__getBoiler(soap, &soap_tmp_ns__getBoiler);
	soap->encodingStyle = "";
	if (!soap_get_ns__getBoiler(soap, &soap_tmp_ns__getBoiler, "ns:getBoiler", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getBoiler(soap, soap_tmp_ns__getBoiler.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getBoilerResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getBoilerResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setBoiler(struct soap *soap)
{	struct ns__setBoiler soap_tmp_ns__setBoiler;
	ns__setBoilerResponse out;
	out.soap_default(soap);
	soap_default_ns__setBoiler(soap, &soap_tmp_ns__setBoiler);
	soap->encodingStyle = "";
	if (!soap_get_ns__setBoiler(soap, &soap_tmp_ns__setBoiler, "ns:setBoiler", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setBoiler(soap, soap_tmp_ns__setBoiler.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:setBoilerResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:setBoilerResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__boilerEvent(struct soap *soap)
{	struct ns__boilerEvent soap_tmp_ns__boilerEvent;
	struct ns__boilerEventResponse soap_tmp_ns__boilerEventResponse;
	int soap_tmp_int;
	soap_default_ns__boilerEventResponse(soap, &soap_tmp_ns__boilerEventResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__boilerEventResponse.out = &soap_tmp_int;
	soap_default_ns__boilerEvent(soap, &soap_tmp_ns__boilerEvent);
	soap->encodingStyle = "";
	if (!soap_get_ns__boilerEvent(soap, &soap_tmp_ns__boilerEvent, "ns:boilerEvent", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__boilerEvent(soap, soap_tmp_ns__boilerEvent.in, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__boilerEventResponse(soap, &soap_tmp_ns__boilerEventResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__boilerEventResponse(soap, &soap_tmp_ns__boilerEventResponse, "ns:boilerEventResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__boilerEventResponse(soap, &soap_tmp_ns__boilerEventResponse, "ns:boilerEventResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getLightCount(struct soap *soap)
{	struct ns__getLightCount soap_tmp_ns__getLightCount;
	struct ns__getLightCountResponse soap_tmp_ns__getLightCountResponse;
	int soap_tmp_int;
	soap_default_ns__getLightCountResponse(soap, &soap_tmp_ns__getLightCountResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__getLightCountResponse.out = &soap_tmp_int;
	soap_default_ns__getLightCount(soap, &soap_tmp_ns__getLightCount);
	soap->encodingStyle = "";
	if (!soap_get_ns__getLightCount(soap, &soap_tmp_ns__getLightCount, "ns:getLightCount", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getLightCount(soap, soap_tmp_ns__getLightCount._, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getLightCountResponse(soap, &soap_tmp_ns__getLightCountResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getLightCountResponse(soap, &soap_tmp_ns__getLightCountResponse, "ns:getLightCountResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getLightCountResponse(soap, &soap_tmp_ns__getLightCountResponse, "ns:getLightCountResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getLightPropertyItem(struct soap *soap)
{	struct ns__getLightPropertyItem soap_tmp_ns__getLightPropertyItem;
	ns__getLightPropertyItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getLightPropertyItem(soap, &soap_tmp_ns__getLightPropertyItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getLightPropertyItem(soap, &soap_tmp_ns__getLightPropertyItem, "ns:getLightPropertyItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getLightPropertyItem(soap, soap_tmp_ns__getLightPropertyItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getLightPropertyItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getLightPropertyItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getLightItem(struct soap *soap)
{	struct ns__getLightItem soap_tmp_ns__getLightItem;
	ns__getLightItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getLightItem(soap, &soap_tmp_ns__getLightItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getLightItem(soap, &soap_tmp_ns__getLightItem, "ns:getLightItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getLightItem(soap, soap_tmp_ns__getLightItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getLightItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getLightItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getLight(struct soap *soap)
{	struct ns__getLight soap_tmp_ns__getLight;
	ns__getLightResponse out;
	out.soap_default(soap);
	soap_default_ns__getLight(soap, &soap_tmp_ns__getLight);
	soap->encodingStyle = "";
	if (!soap_get_ns__getLight(soap, &soap_tmp_ns__getLight, "ns:getLight", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getLight(soap, soap_tmp_ns__getLight.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getLightResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getLightResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setLight(struct soap *soap)
{	struct ns__setLight soap_tmp_ns__setLight;
	ns__setLightResponse out;
	out.soap_default(soap);
	soap_default_ns__setLight(soap, &soap_tmp_ns__setLight);
	soap->encodingStyle = "";
	if (!soap_get_ns__setLight(soap, &soap_tmp_ns__setLight, "ns:setLight", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setLight(soap, soap_tmp_ns__setLight.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:setLightResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:setLightResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__lightEvent(struct soap *soap)
{	struct ns__lightEvent soap_tmp_ns__lightEvent;
	struct ns__lightEventResponse soap_tmp_ns__lightEventResponse;
	int soap_tmp_int;
	soap_default_ns__lightEventResponse(soap, &soap_tmp_ns__lightEventResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__lightEventResponse.out = &soap_tmp_int;
	soap_default_ns__lightEvent(soap, &soap_tmp_ns__lightEvent);
	soap->encodingStyle = "";
	if (!soap_get_ns__lightEvent(soap, &soap_tmp_ns__lightEvent, "ns:lightEvent", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__lightEvent(soap, soap_tmp_ns__lightEvent.in, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__lightEventResponse(soap, &soap_tmp_ns__lightEventResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__lightEventResponse(soap, &soap_tmp_ns__lightEventResponse, "ns:lightEventResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__lightEventResponse(soap, &soap_tmp_ns__lightEventResponse, "ns:lightEventResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getGasValveCount(struct soap *soap)
{	struct ns__getGasValveCount soap_tmp_ns__getGasValveCount;
	struct ns__getGasValveCountResponse soap_tmp_ns__getGasValveCountResponse;
	int soap_tmp_int;
	soap_default_ns__getGasValveCountResponse(soap, &soap_tmp_ns__getGasValveCountResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__getGasValveCountResponse.out = &soap_tmp_int;
	soap_default_ns__getGasValveCount(soap, &soap_tmp_ns__getGasValveCount);
	soap->encodingStyle = "";
	if (!soap_get_ns__getGasValveCount(soap, &soap_tmp_ns__getGasValveCount, "ns:getGasValveCount", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getGasValveCount(soap, soap_tmp_ns__getGasValveCount._, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getGasValveCountResponse(soap, &soap_tmp_ns__getGasValveCountResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getGasValveCountResponse(soap, &soap_tmp_ns__getGasValveCountResponse, "ns:getGasValveCountResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getGasValveCountResponse(soap, &soap_tmp_ns__getGasValveCountResponse, "ns:getGasValveCountResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getGasValvePropertyItem(struct soap *soap)
{	struct ns__getGasValvePropertyItem soap_tmp_ns__getGasValvePropertyItem;
	ns__getGasValvePropertyItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getGasValvePropertyItem(soap, &soap_tmp_ns__getGasValvePropertyItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getGasValvePropertyItem(soap, &soap_tmp_ns__getGasValvePropertyItem, "ns:getGasValvePropertyItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getGasValvePropertyItem(soap, soap_tmp_ns__getGasValvePropertyItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getGasValvePropertyItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getGasValvePropertyItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getGasValveItem(struct soap *soap)
{	struct ns__getGasValveItem soap_tmp_ns__getGasValveItem;
	ns__getGasValveItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getGasValveItem(soap, &soap_tmp_ns__getGasValveItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getGasValveItem(soap, &soap_tmp_ns__getGasValveItem, "ns:getGasValveItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getGasValveItem(soap, soap_tmp_ns__getGasValveItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getGasValveItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getGasValveItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getGasValve(struct soap *soap)
{	struct ns__getGasValve soap_tmp_ns__getGasValve;
	ns__getGasValveResponse out;
	out.soap_default(soap);
	soap_default_ns__getGasValve(soap, &soap_tmp_ns__getGasValve);
	soap->encodingStyle = "";
	if (!soap_get_ns__getGasValve(soap, &soap_tmp_ns__getGasValve, "ns:getGasValve", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getGasValve(soap, soap_tmp_ns__getGasValve.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getGasValveResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getGasValveResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setGasValve(struct soap *soap)
{	struct ns__setGasValve soap_tmp_ns__setGasValve;
	ns__setGasValveResponse out;
	out.soap_default(soap);
	soap_default_ns__setGasValve(soap, &soap_tmp_ns__setGasValve);
	soap->encodingStyle = "";
	if (!soap_get_ns__setGasValve(soap, &soap_tmp_ns__setGasValve, "ns:setGasValve", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setGasValve(soap, soap_tmp_ns__setGasValve.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:setGasValveResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:setGasValveResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__gasValveEvent(struct soap *soap)
{	struct ns__gasValveEvent soap_tmp_ns__gasValveEvent;
	struct ns__gasValveEventResponse soap_tmp_ns__gasValveEventResponse;
	int soap_tmp_int;
	soap_default_ns__gasValveEventResponse(soap, &soap_tmp_ns__gasValveEventResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__gasValveEventResponse.out = &soap_tmp_int;
	soap_default_ns__gasValveEvent(soap, &soap_tmp_ns__gasValveEvent);
	soap->encodingStyle = "";
	if (!soap_get_ns__gasValveEvent(soap, &soap_tmp_ns__gasValveEvent, "ns:gasValveEvent", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__gasValveEvent(soap, soap_tmp_ns__gasValveEvent.in, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__gasValveEventResponse(soap, &soap_tmp_ns__gasValveEventResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__gasValveEventResponse(soap, &soap_tmp_ns__gasValveEventResponse, "ns:gasValveEventResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__gasValveEventResponse(soap, &soap_tmp_ns__gasValveEventResponse, "ns:gasValveEventResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getCurtainCount(struct soap *soap)
{	struct ns__getCurtainCount soap_tmp_ns__getCurtainCount;
	struct ns__getCurtainCountResponse soap_tmp_ns__getCurtainCountResponse;
	int soap_tmp_int;
	soap_default_ns__getCurtainCountResponse(soap, &soap_tmp_ns__getCurtainCountResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__getCurtainCountResponse.out = &soap_tmp_int;
	soap_default_ns__getCurtainCount(soap, &soap_tmp_ns__getCurtainCount);
	soap->encodingStyle = "";
	if (!soap_get_ns__getCurtainCount(soap, &soap_tmp_ns__getCurtainCount, "ns:getCurtainCount", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getCurtainCount(soap, soap_tmp_ns__getCurtainCount._, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getCurtainCountResponse(soap, &soap_tmp_ns__getCurtainCountResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getCurtainCountResponse(soap, &soap_tmp_ns__getCurtainCountResponse, "ns:getCurtainCountResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getCurtainCountResponse(soap, &soap_tmp_ns__getCurtainCountResponse, "ns:getCurtainCountResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getCurtainPropertyItem(struct soap *soap)
{	struct ns__getCurtainPropertyItem soap_tmp_ns__getCurtainPropertyItem;
	ns__getCurtainPropertyItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getCurtainPropertyItem(soap, &soap_tmp_ns__getCurtainPropertyItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getCurtainPropertyItem(soap, &soap_tmp_ns__getCurtainPropertyItem, "ns:getCurtainPropertyItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getCurtainPropertyItem(soap, soap_tmp_ns__getCurtainPropertyItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getCurtainPropertyItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getCurtainPropertyItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getCurtainItem(struct soap *soap)
{	struct ns__getCurtainItem soap_tmp_ns__getCurtainItem;
	ns__getCurtainItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getCurtainItem(soap, &soap_tmp_ns__getCurtainItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getCurtainItem(soap, &soap_tmp_ns__getCurtainItem, "ns:getCurtainItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getCurtainItem(soap, soap_tmp_ns__getCurtainItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getCurtainItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getCurtainItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getCurtain(struct soap *soap)
{	struct ns__getCurtain soap_tmp_ns__getCurtain;
	ns__getCurtainResponse out;
	out.soap_default(soap);
	soap_default_ns__getCurtain(soap, &soap_tmp_ns__getCurtain);
	soap->encodingStyle = "";
	if (!soap_get_ns__getCurtain(soap, &soap_tmp_ns__getCurtain, "ns:getCurtain", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getCurtain(soap, soap_tmp_ns__getCurtain.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getCurtainResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getCurtainResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setCurtain(struct soap *soap)
{	struct ns__setCurtain soap_tmp_ns__setCurtain;
	ns__setCurtainResponse out;
	out.soap_default(soap);
	soap_default_ns__setCurtain(soap, &soap_tmp_ns__setCurtain);
	soap->encodingStyle = "";
	if (!soap_get_ns__setCurtain(soap, &soap_tmp_ns__setCurtain, "ns:setCurtain", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setCurtain(soap, soap_tmp_ns__setCurtain.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:setCurtainResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:setCurtainResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__curtainEvent(struct soap *soap)
{	struct ns__curtainEvent soap_tmp_ns__curtainEvent;
	struct ns__curtainEventResponse soap_tmp_ns__curtainEventResponse;
	int soap_tmp_int;
	soap_default_ns__curtainEventResponse(soap, &soap_tmp_ns__curtainEventResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__curtainEventResponse.out = &soap_tmp_int;
	soap_default_ns__curtainEvent(soap, &soap_tmp_ns__curtainEvent);
	soap->encodingStyle = "";
	if (!soap_get_ns__curtainEvent(soap, &soap_tmp_ns__curtainEvent, "ns:curtainEvent", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__curtainEvent(soap, soap_tmp_ns__curtainEvent.in, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__curtainEventResponse(soap, &soap_tmp_ns__curtainEventResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__curtainEventResponse(soap, &soap_tmp_ns__curtainEventResponse, "ns:curtainEventResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__curtainEventResponse(soap, &soap_tmp_ns__curtainEventResponse, "ns:curtainEventResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getBundleLightCount(struct soap *soap)
{	struct ns__getBundleLightCount soap_tmp_ns__getBundleLightCount;
	struct ns__getBundleLightCountResponse soap_tmp_ns__getBundleLightCountResponse;
	int soap_tmp_int;
	soap_default_ns__getBundleLightCountResponse(soap, &soap_tmp_ns__getBundleLightCountResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__getBundleLightCountResponse.out = &soap_tmp_int;
	soap_default_ns__getBundleLightCount(soap, &soap_tmp_ns__getBundleLightCount);
	soap->encodingStyle = "";
	if (!soap_get_ns__getBundleLightCount(soap, &soap_tmp_ns__getBundleLightCount, "ns:getBundleLightCount", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getBundleLightCount(soap, soap_tmp_ns__getBundleLightCount._, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getBundleLightCountResponse(soap, &soap_tmp_ns__getBundleLightCountResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getBundleLightCountResponse(soap, &soap_tmp_ns__getBundleLightCountResponse, "ns:getBundleLightCountResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getBundleLightCountResponse(soap, &soap_tmp_ns__getBundleLightCountResponse, "ns:getBundleLightCountResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getBundleLightPropertyItem(struct soap *soap)
{	struct ns__getBundleLightPropertyItem soap_tmp_ns__getBundleLightPropertyItem;
	ns__getBundleLightPropertyItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getBundleLightPropertyItem(soap, &soap_tmp_ns__getBundleLightPropertyItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getBundleLightPropertyItem(soap, &soap_tmp_ns__getBundleLightPropertyItem, "ns:getBundleLightPropertyItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getBundleLightPropertyItem(soap, soap_tmp_ns__getBundleLightPropertyItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getBundleLightPropertyItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getBundleLightPropertyItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getBundleLightItem(struct soap *soap)
{	struct ns__getBundleLightItem soap_tmp_ns__getBundleLightItem;
	ns__getBundleLightItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getBundleLightItem(soap, &soap_tmp_ns__getBundleLightItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getBundleLightItem(soap, &soap_tmp_ns__getBundleLightItem, "ns:getBundleLightItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getBundleLightItem(soap, soap_tmp_ns__getBundleLightItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getBundleLightItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getBundleLightItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getBundleLight(struct soap *soap)
{	struct ns__getBundleLight soap_tmp_ns__getBundleLight;
	ns__getBundleLightResponse out;
	out.soap_default(soap);
	soap_default_ns__getBundleLight(soap, &soap_tmp_ns__getBundleLight);
	soap->encodingStyle = "";
	if (!soap_get_ns__getBundleLight(soap, &soap_tmp_ns__getBundleLight, "ns:getBundleLight", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getBundleLight(soap, soap_tmp_ns__getBundleLight.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getBundleLightResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getBundleLightResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setBundleLight(struct soap *soap)
{	struct ns__setBundleLight soap_tmp_ns__setBundleLight;
	ns__setBundleLightResponse out;
	out.soap_default(soap);
	soap_default_ns__setBundleLight(soap, &soap_tmp_ns__setBundleLight);
	soap->encodingStyle = "";
	if (!soap_get_ns__setBundleLight(soap, &soap_tmp_ns__setBundleLight, "ns:setBundleLight", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setBundleLight(soap, soap_tmp_ns__setBundleLight.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:setBundleLightResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:setBundleLightResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__BundleLightEvent(struct soap *soap)
{	struct ns__BundleLightEvent soap_tmp_ns__BundleLightEvent;
	struct ns__BundleLightEventResponse soap_tmp_ns__BundleLightEventResponse;
	int soap_tmp_int;
	soap_default_ns__BundleLightEventResponse(soap, &soap_tmp_ns__BundleLightEventResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__BundleLightEventResponse.out = &soap_tmp_int;
	soap_default_ns__BundleLightEvent(soap, &soap_tmp_ns__BundleLightEvent);
	soap->encodingStyle = "";
	if (!soap_get_ns__BundleLightEvent(soap, &soap_tmp_ns__BundleLightEvent, "ns:BundleLightEvent", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__BundleLightEvent(soap, soap_tmp_ns__BundleLightEvent.in, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__BundleLightEventResponse(soap, &soap_tmp_ns__BundleLightEventResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__BundleLightEventResponse(soap, &soap_tmp_ns__BundleLightEventResponse, "ns:BundleLightEventResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__BundleLightEventResponse(soap, &soap_tmp_ns__BundleLightEventResponse, "ns:BundleLightEventResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getSystemAirconCount(struct soap *soap)
{	struct ns__getSystemAirconCount soap_tmp_ns__getSystemAirconCount;
	struct ns__getSystemAirconCountResponse soap_tmp_ns__getSystemAirconCountResponse;
	int soap_tmp_int;
	soap_default_ns__getSystemAirconCountResponse(soap, &soap_tmp_ns__getSystemAirconCountResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__getSystemAirconCountResponse.out = &soap_tmp_int;
	soap_default_ns__getSystemAirconCount(soap, &soap_tmp_ns__getSystemAirconCount);
	soap->encodingStyle = "";
	if (!soap_get_ns__getSystemAirconCount(soap, &soap_tmp_ns__getSystemAirconCount, "ns:getSystemAirconCount", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getSystemAirconCount(soap, soap_tmp_ns__getSystemAirconCount._, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getSystemAirconCountResponse(soap, &soap_tmp_ns__getSystemAirconCountResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getSystemAirconCountResponse(soap, &soap_tmp_ns__getSystemAirconCountResponse, "ns:getSystemAirconCountResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getSystemAirconCountResponse(soap, &soap_tmp_ns__getSystemAirconCountResponse, "ns:getSystemAirconCountResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getSystemAirconPropertyItem(struct soap *soap)
{	struct ns__getSystemAirconPropertyItem soap_tmp_ns__getSystemAirconPropertyItem;
	ns__getSystemAirconPropertyItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getSystemAirconPropertyItem(soap, &soap_tmp_ns__getSystemAirconPropertyItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getSystemAirconPropertyItem(soap, &soap_tmp_ns__getSystemAirconPropertyItem, "ns:getSystemAirconPropertyItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getSystemAirconPropertyItem(soap, soap_tmp_ns__getSystemAirconPropertyItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getSystemAirconPropertyItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getSystemAirconPropertyItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getSystemAirconItem(struct soap *soap)
{	struct ns__getSystemAirconItem soap_tmp_ns__getSystemAirconItem;
	ns__getSystemAirconItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getSystemAirconItem(soap, &soap_tmp_ns__getSystemAirconItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getSystemAirconItem(soap, &soap_tmp_ns__getSystemAirconItem, "ns:getSystemAirconItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getSystemAirconItem(soap, soap_tmp_ns__getSystemAirconItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getSystemAirconItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getSystemAirconItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getSystemAircon(struct soap *soap)
{	struct ns__getSystemAircon soap_tmp_ns__getSystemAircon;
	ns__getSystemAirconResponse out;
	out.soap_default(soap);
	soap_default_ns__getSystemAircon(soap, &soap_tmp_ns__getSystemAircon);
	soap->encodingStyle = "";
	if (!soap_get_ns__getSystemAircon(soap, &soap_tmp_ns__getSystemAircon, "ns:getSystemAircon", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getSystemAircon(soap, soap_tmp_ns__getSystemAircon.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getSystemAirconResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getSystemAirconResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setSystemAircon(struct soap *soap)
{	struct ns__setSystemAircon soap_tmp_ns__setSystemAircon;
	ns__setSystemAirconResponse out;
	out.soap_default(soap);
	soap_default_ns__setSystemAircon(soap, &soap_tmp_ns__setSystemAircon);
	soap->encodingStyle = "";
	if (!soap_get_ns__setSystemAircon(soap, &soap_tmp_ns__setSystemAircon, "ns:setSystemAircon", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setSystemAircon(soap, soap_tmp_ns__setSystemAircon.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:setSystemAirconResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:setSystemAirconResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__systemAirconEvent(struct soap *soap)
{	struct ns__systemAirconEvent soap_tmp_ns__systemAirconEvent;
	struct ns__systemAirconEventResponse soap_tmp_ns__systemAirconEventResponse;
	int soap_tmp_int;
	soap_default_ns__systemAirconEventResponse(soap, &soap_tmp_ns__systemAirconEventResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__systemAirconEventResponse.out = &soap_tmp_int;
	soap_default_ns__systemAirconEvent(soap, &soap_tmp_ns__systemAirconEvent);
	soap->encodingStyle = "";
	if (!soap_get_ns__systemAirconEvent(soap, &soap_tmp_ns__systemAirconEvent, "ns:systemAirconEvent", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__systemAirconEvent(soap, soap_tmp_ns__systemAirconEvent.in, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__systemAirconEventResponse(soap, &soap_tmp_ns__systemAirconEventResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__systemAirconEventResponse(soap, &soap_tmp_ns__systemAirconEventResponse, "ns:systemAirconEventResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__systemAirconEventResponse(soap, &soap_tmp_ns__systemAirconEventResponse, "ns:systemAirconEventResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getFanSystemCount(struct soap *soap)
{	struct ns__getFanSystemCount soap_tmp_ns__getFanSystemCount;
	struct ns__getFanSystemCountResponse soap_tmp_ns__getFanSystemCountResponse;
	int soap_tmp_int;
	soap_default_ns__getFanSystemCountResponse(soap, &soap_tmp_ns__getFanSystemCountResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__getFanSystemCountResponse.out = &soap_tmp_int;
	soap_default_ns__getFanSystemCount(soap, &soap_tmp_ns__getFanSystemCount);
	soap->encodingStyle = "";
	if (!soap_get_ns__getFanSystemCount(soap, &soap_tmp_ns__getFanSystemCount, "ns:getFanSystemCount", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getFanSystemCount(soap, soap_tmp_ns__getFanSystemCount._, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getFanSystemCountResponse(soap, &soap_tmp_ns__getFanSystemCountResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getFanSystemCountResponse(soap, &soap_tmp_ns__getFanSystemCountResponse, "ns:getFanSystemCountResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getFanSystemCountResponse(soap, &soap_tmp_ns__getFanSystemCountResponse, "ns:getFanSystemCountResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getFanSystemPropertyItem(struct soap *soap)
{	struct ns__getFanSystemPropertyItem soap_tmp_ns__getFanSystemPropertyItem;
	ns__getFanSystemPropertyItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getFanSystemPropertyItem(soap, &soap_tmp_ns__getFanSystemPropertyItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getFanSystemPropertyItem(soap, &soap_tmp_ns__getFanSystemPropertyItem, "ns:getFanSystemPropertyItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getFanSystemPropertyItem(soap, soap_tmp_ns__getFanSystemPropertyItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getFanSystemPropertyItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getFanSystemPropertyItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getFanSystemItem(struct soap *soap)
{	struct ns__getFanSystemItem soap_tmp_ns__getFanSystemItem;
	ns__getFanSystemItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getFanSystemItem(soap, &soap_tmp_ns__getFanSystemItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getFanSystemItem(soap, &soap_tmp_ns__getFanSystemItem, "ns:getFanSystemItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getFanSystemItem(soap, soap_tmp_ns__getFanSystemItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getFanSystemItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getFanSystemItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getFanSystem(struct soap *soap)
{	struct ns__getFanSystem soap_tmp_ns__getFanSystem;
	ns__getFanSystemResponse out;
	out.soap_default(soap);
	soap_default_ns__getFanSystem(soap, &soap_tmp_ns__getFanSystem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getFanSystem(soap, &soap_tmp_ns__getFanSystem, "ns:getFanSystem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getFanSystem(soap, soap_tmp_ns__getFanSystem.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getFanSystemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getFanSystemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setFanSystem(struct soap *soap)
{	struct ns__setFanSystem soap_tmp_ns__setFanSystem;
	ns__setFanSystemResponse out;
	out.soap_default(soap);
	soap_default_ns__setFanSystem(soap, &soap_tmp_ns__setFanSystem);
	soap->encodingStyle = "";
	if (!soap_get_ns__setFanSystem(soap, &soap_tmp_ns__setFanSystem, "ns:setFanSystem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setFanSystem(soap, soap_tmp_ns__setFanSystem.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:setFanSystemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:setFanSystemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__FanSystemEvent(struct soap *soap)
{	struct ns__FanSystemEvent soap_tmp_ns__FanSystemEvent;
	struct ns__FanSystemEventResponse soap_tmp_ns__FanSystemEventResponse;
	int soap_tmp_int;
	soap_default_ns__FanSystemEventResponse(soap, &soap_tmp_ns__FanSystemEventResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__FanSystemEventResponse.out = &soap_tmp_int;
	soap_default_ns__FanSystemEvent(soap, &soap_tmp_ns__FanSystemEvent);
	soap->encodingStyle = "";
	if (!soap_get_ns__FanSystemEvent(soap, &soap_tmp_ns__FanSystemEvent, "ns:FanSystemEvent", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__FanSystemEvent(soap, soap_tmp_ns__FanSystemEvent.in, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__FanSystemEventResponse(soap, &soap_tmp_ns__FanSystemEventResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__FanSystemEventResponse(soap, &soap_tmp_ns__FanSystemEventResponse, "ns:FanSystemEventResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__FanSystemEventResponse(soap, &soap_tmp_ns__FanSystemEventResponse, "ns:FanSystemEventResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getSecuritySensorCount(struct soap *soap)
{	struct ns__getSecuritySensorCount soap_tmp_ns__getSecuritySensorCount;
	struct ns__getSecuritySensorCountResponse soap_tmp_ns__getSecuritySensorCountResponse;
	int soap_tmp_int;
	soap_default_ns__getSecuritySensorCountResponse(soap, &soap_tmp_ns__getSecuritySensorCountResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__getSecuritySensorCountResponse.out = &soap_tmp_int;
	soap_default_ns__getSecuritySensorCount(soap, &soap_tmp_ns__getSecuritySensorCount);
	soap->encodingStyle = "";
	if (!soap_get_ns__getSecuritySensorCount(soap, &soap_tmp_ns__getSecuritySensorCount, "ns:getSecuritySensorCount", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getSecuritySensorCount(soap, soap_tmp_ns__getSecuritySensorCount._, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getSecuritySensorCountResponse(soap, &soap_tmp_ns__getSecuritySensorCountResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getSecuritySensorCountResponse(soap, &soap_tmp_ns__getSecuritySensorCountResponse, "ns:getSecuritySensorCountResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getSecuritySensorCountResponse(soap, &soap_tmp_ns__getSecuritySensorCountResponse, "ns:getSecuritySensorCountResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getSecuritySensorPropertyItem(struct soap *soap)
{	struct ns__getSecuritySensorPropertyItem soap_tmp_ns__getSecuritySensorPropertyItem;
	ns__getSecuritySensorPropertyItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getSecuritySensorPropertyItem(soap, &soap_tmp_ns__getSecuritySensorPropertyItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getSecuritySensorPropertyItem(soap, &soap_tmp_ns__getSecuritySensorPropertyItem, "ns:getSecuritySensorPropertyItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getSecuritySensorPropertyItem(soap, soap_tmp_ns__getSecuritySensorPropertyItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getSecuritySensorPropertyItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getSecuritySensorPropertyItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getSecuritySensorItem(struct soap *soap)
{	struct ns__getSecuritySensorItem soap_tmp_ns__getSecuritySensorItem;
	ns__getSecuritySensorItemResponse out;
	out.soap_default(soap);
	soap_default_ns__getSecuritySensorItem(soap, &soap_tmp_ns__getSecuritySensorItem);
	soap->encodingStyle = "";
	if (!soap_get_ns__getSecuritySensorItem(soap, &soap_tmp_ns__getSecuritySensorItem, "ns:getSecuritySensorItem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getSecuritySensorItem(soap, soap_tmp_ns__getSecuritySensorItem.order, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getSecuritySensorItemResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getSecuritySensorItemResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getSecuritySensor(struct soap *soap)
{	struct ns__getSecuritySensor soap_tmp_ns__getSecuritySensor;
	ns__getSecuritySensorResponse out;
	out.soap_default(soap);
	soap_default_ns__getSecuritySensor(soap, &soap_tmp_ns__getSecuritySensor);
	soap->encodingStyle = "";
	if (!soap_get_ns__getSecuritySensor(soap, &soap_tmp_ns__getSecuritySensor, "ns:getSecuritySensor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getSecuritySensor(soap, soap_tmp_ns__getSecuritySensor.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:getSecuritySensorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:getSecuritySensorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setSecuritySensor(struct soap *soap)
{	struct ns__setSecuritySensor soap_tmp_ns__setSecuritySensor;
	ns__setSecuritySensorResponse out;
	out.soap_default(soap);
	soap_default_ns__setSecuritySensor(soap, &soap_tmp_ns__setSecuritySensor);
	soap->encodingStyle = "";
	if (!soap_get_ns__setSecuritySensor(soap, &soap_tmp_ns__setSecuritySensor, "ns:setSecuritySensor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setSecuritySensor(soap, soap_tmp_ns__setSecuritySensor.in, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	out.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || out.soap_put(soap, "ns:setSecuritySensorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || out.soap_put(soap, "ns:setSecuritySensorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__securitySensorEvent(struct soap *soap)
{	struct ns__securitySensorEvent soap_tmp_ns__securitySensorEvent;
	struct ns__securitySensorEventResponse soap_tmp_ns__securitySensorEventResponse;
	int soap_tmp_int;
	soap_default_ns__securitySensorEventResponse(soap, &soap_tmp_ns__securitySensorEventResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__securitySensorEventResponse.out = &soap_tmp_int;
	soap_default_ns__securitySensorEvent(soap, &soap_tmp_ns__securitySensorEvent);
	soap->encodingStyle = "";
	if (!soap_get_ns__securitySensorEvent(soap, &soap_tmp_ns__securitySensorEvent, "ns:securitySensorEvent", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__securitySensorEvent(soap, soap_tmp_ns__securitySensorEvent.in, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__securitySensorEventResponse(soap, &soap_tmp_ns__securitySensorEventResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__securitySensorEventResponse(soap, &soap_tmp_ns__securitySensorEventResponse, "ns:securitySensorEventResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__securitySensorEventResponse(soap, &soap_tmp_ns__securitySensorEventResponse, "ns:securitySensorEventResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__subcribeEvent(struct soap *soap)
{	struct ns__subcribeEvent soap_tmp_ns__subcribeEvent;
	struct ns__subcribeEventResponse soap_tmp_ns__subcribeEventResponse;
	int soap_tmp_int;
	soap_default_ns__subcribeEventResponse(soap, &soap_tmp_ns__subcribeEventResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_ns__subcribeEventResponse.out = &soap_tmp_int;
	soap_default_ns__subcribeEvent(soap, &soap_tmp_ns__subcribeEvent);
	soap->encodingStyle = "";
	if (!soap_get_ns__subcribeEvent(soap, &soap_tmp_ns__subcribeEvent, "ns:subcribeEvent", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__subcribeEvent(soap, soap_tmp_ns__subcribeEvent.port, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__subcribeEventResponse(soap, &soap_tmp_ns__subcribeEventResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__subcribeEventResponse(soap, &soap_tmp_ns__subcribeEventResponse, "ns:subcribeEventResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__subcribeEventResponse(soap, &soap_tmp_ns__subcribeEventResponse, "ns:subcribeEventResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

} // namespace cmxDeviceService


/* End of cmxDeviceServiceServer.cpp */
